# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  # Preffix Resources
  resourceApiManagementNamePreffix: 'apim-'
  resourceKubernetesNamePreffix: 'aks'
  resourceGroupNamePreffix: 'rs-gp'

  # Commons constants
  count: '001'
  env: 'dev'
  resourceVsubnetId: 'aks-subnet'
  tags: 'AmberEggApi Dev KeepOnlineOnlyWorkTime'
  resourceVnetId: 'aks-vnet'
  resourceGroupLocation: 'eastus'

  # Resource Name
  resourceContainerRegistryName: 'AcrRrDevAmberEgg'
  resourceGroupName: '$(resourceGroupNamePreffix)-$(env)-$(count)'
  resourceKubernetesName: '$(resourceKubernetesNamePreffix)-$(env)-$(count)'
  resourceApiManagementName: '$(resourceApiManagementNamePreffix)-$(env)-$(count)'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: '$(subscriptionName)'
    scriptType: 'bash'
    scriptLocation: 'scriptPath'
    scriptPath: './scripts/creategroup.sh'
    arguments: '$(resourceGroupName) $(resourceGroupLocation) ''$(tags)'''
  displayName: 'Create the resource group'
- task: AzureCLI@2
  inputs:
    azureSubscription: '$(subscriptionName)'
    scriptType: 'bash'
    scriptLocation: 'scriptPath'
    scriptPath: './scripts/createvnet.sh'
    arguments: '$(resourceGroupName) $(resourceVnetId) $(resourceVsubnetId) ''$(tags)'''
  displayName: 'Create the vnet to kubernetes'
- task: AzureCLI@2
  inputs:
    azureSubscription: '$(subscriptionName)'
    scriptType: 'bash'
    scriptLocation: 'scriptPath'
    scriptPath: './scripts/createaks.sh'
    arguments: '$(resourceGroupName) $(resourceKubernetesName) ''$(tags)'' $(resourceGroupLocation) $(subscription) $(appId) $(password) $(resourceVnetId) $(resourceVsubnetId)'
  displayName: 'Create the kubernetes service'
- task: AzureCLI@2
  inputs:
    azureSubscription: '$(subscriptionName)'
    scriptType: 'bash'
    scriptLocation: 'scriptPath'
    scriptPath: './scripts/createacr.sh'
    arguments: '$(resourceGroupName) $(resourceContainerRegistryName) ''$(tags)'''
  displayName: 'Create the container registry'